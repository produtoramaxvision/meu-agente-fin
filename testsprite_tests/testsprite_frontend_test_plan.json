[
  {
    "id": "TC001",
    "title": "User Authentication Success",
    "description": "Verify that a user can successfully sign up, log in, and maintain a valid session with correct credentials via Supabase Auth.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the signup page."
      },
      {
        "type": "action",
        "description": "Input valid email and password credentials."
      },
      {
        "type": "action",
        "description": "Submit the signup form."
      },
      {
        "type": "assertion",
        "description": "Check that user account is created and user is logged in automatically."
      },
      {
        "type": "action",
        "description": "Log out from the application."
      },
      {
        "type": "action",
        "description": "Navigate to login page."
      },
      {
        "type": "action",
        "description": "Input valid email and password."
      },
      {
        "type": "action",
        "description": "Submit login form."
      },
      {
        "type": "assertion",
        "description": "Verify the session is established and user lands on dashboard."
      }
    ]
  },
  {
    "id": "TC002",
    "title": "User Authentication Failure with Invalid Credentials",
    "description": "Verify that user cannot log in with invalid or incorrect credentials and appropriate error messages are displayed.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to login page."
      },
      {
        "type": "action",
        "description": "Input invalid email or incorrect password."
      },
      {
        "type": "action",
        "description": "Attempt to submit login form."
      },
      {
        "type": "assertion",
        "description": "Check that login is denied and meaningful error message is shown."
      }
    ]
  },
  {
    "id": "TC003",
    "title": "Subscription Plan Permissions Enforcement",
    "description": "Verify that features and access are correctly permitted or restricted based on user subscription plan tier (Free, Basic, Business, Premium).",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as a user with Free plan."
      },
      {
        "type": "action",
        "description": "Attempt to access paid features like Google Workspace integration, financial exports, and advanced AI agents."
      },
      {
        "type": "assertion",
        "description": "Verify that access is denied and user is prompted to upgrade subscription."
      },
      {
        "type": "action",
        "description": "Upgrade user subscription to Basic, Business, and Premium sequentially."
      },
      {
        "type": "assertion",
        "description": "Verify that features unlock progressively as per plan description and permissions."
      }
    ]
  },
  {
    "id": "TC004",
    "title": "AI Agent WhatsApp Message Interpretation and Task Execution",
    "description": "Verify that AI sub-agents correctly interpret natural language inputs received via WhatsApp to perform respective tasks such as financial entries, scheduling, lead qualification, and video creation.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Send a properly phrased financial entry command via WhatsApp to the Finance AI agent."
      },
      {
        "type": "assertion",
        "description": "Verify income or expense record is created with correct categorization."
      },
      {
        "type": "action",
        "description": "Send an ambiguous or incomplete message to AI agent."
      },
      {
        "type": "assertion",
        "description": "Verify AI agent requests more details or generates a meaningful error."
      },
      {
        "type": "action",
        "description": "Send scheduling request for a meeting via WhatsApp to Scheduling agent."
      },
      {
        "type": "assertion",
        "description": "Confirmed that event is created in Google Calendar with proper date, time, and notification."
      },
      {
        "type": "action",
        "description": "Send marketing campaign analysis request to Marketing AI agent."
      },
      {
        "type": "assertion",
        "description": "Verify that analysis results are returned accurately."
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Financial Records Management and Export",
    "description": "Verify that financial entries can be created, edited, categorized, filtered by time/category, and exported properly in CSV and PDF formats for paid users.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as a Business plan user."
      },
      {
        "type": "action",
        "description": "Create multiple income and expense records with various categories."
      },
      {
        "type": "action",
        "description": "Apply filters by date range and category."
      },
      {
        "type": "assertion",
        "description": "Verify that records shown match the filter criteria."
      },
      {
        "type": "action",
        "description": "Export filtered financial data as CSV and verify file content."
      },
      {
        "type": "action",
        "description": "Export filtered financial data as PDF and verify formatting and accuracy."
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Calendar Integration and Notification via Google Workspace",
    "description": "Verify that scheduling AI agent creates, updates, and deletes calendar events on Google Calendar with proper reminders sent through WhatsApp notifications.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Connect Google Workspace account to the system."
      },
      {
        "type": "action",
        "description": "Use Scheduling AI agent to create a new calendar event."
      },
      {
        "type": "assertion",
        "description": "Verify event appears correctly in Google Calendar with correct date, time, and details."
      },
      {
        "type": "action",
        "description": "Modify the existing event details through the Scheduling agent."
      },
      {
        "type": "assertion",
        "description": "Confirm event is updated on Google Calendar."
      },
      {
        "type": "action",
        "description": "Delete the event via Scheduling agent."
      },
      {
        "type": "assertion",
        "description": "Verify event is removed from Google Calendar."
      },
      {
        "type": "action",
        "description": "Check for WhatsApp notifications sent for event reminders."
      },
      {
        "type": "assertion",
        "description": "Verify timely and accurate reminders are received."
      }
    ]
  },
  {
    "id": "TC007",
    "title": "Data Privacy, Security Features, and CSRF Protection",
    "description": "Verify that security mechanisms are correctly implemented, including CSRF token validation, HTTP header protections, input sanitization, and compliance with LGPD data privacy requirements.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Submit requests with valid and invalid CSRF tokens."
      },
      {
        "type": "assertion",
        "description": "Verify requests with invalid or missing CSRF tokens are rejected."
      },
      {
        "type": "action",
        "description": "Attempt to input malicious payloads in form fields."
      },
      {
        "type": "assertion",
        "description": "Verify inputs are sanitized and no XSS or injection attacks occur."
      },
      {
        "type": "action",
        "description": "Check HTTP headers related to security such as Content-Security-Policy, X-Frame-Options."
      },
      {
        "type": "assertion",
        "description": "Verify headers are set correctly to protect against common vulnerabilities."
      },
      {
        "type": "action",
        "description": "Review Privacy Section UI and backend to check data consent and opt-out mechanisms as per LGPD."
      },
      {
        "type": "assertion",
        "description": "Validate compliance with data privacy regulations and user control over personal data."
      }
    ]
  },
  {
    "id": "TC008",
    "title": "Backup and Data Restoration in Premium Plan",
    "description": "Verify daily offsite backups run successfully following 3-2-1 policy and that data restoration can be performed successfully in Premium tier.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Trigger data backup manually and monitor scheduled daily backups."
      },
      {
        "type": "assertion",
        "description": "Verify backup files are stored offsite correctly and logs indicate successful runs."
      },
      {
        "type": "action",
        "description": "Perform a data restoration process from backup."
      },
      {
        "type": "assertion",
        "description": "Verify restored data integrity matches original and system recovers without errors."
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Support Ticket Submission and Response Based on Subscription Level",
    "description": "Verify that users can submit support tickets, FAQ responses are accessible, and that response SLA varies according to Business and Premium plans.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Log in as a Business plan user and submit a support ticket."
      },
      {
        "type": "assertion",
        "description": "Verify ticket is logged and user receives appropriate acknowledgement."
      },
      {
        "type": "action",
        "description": "Log in as a Premium user and submit a support ticket."
      },
      {
        "type": "assertion",
        "description": "Verify premium users see faster ticket response times and access to integrated chat."
      },
      {
        "type": "action",
        "description": "Access FAQ sections as both plan users."
      },
      {
        "type": "assertion",
        "description": "Verify FAQs load correctly and relevant to user's plan."
      }
    ]
  },
  {
    "id": "TC010",
    "title": "UI Responsiveness and Accessibility Across Devices",
    "description": "Verify that the user interface adjusts correctly on different devices (desktop, tablet, mobile) and supports accessibility standards such as keyboard navigation and screen reader support.",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Open the application on desktop, tablet, and mobile simulators."
      },
      {
        "type": "assertion",
        "description": "Verify all UI components render properly without overflow or layout breaks."
      },
      {
        "type": "action",
        "description": "Use keyboard navigation to operate main UI elements."
      },
      {
        "type": "assertion",
        "description": "Verify focus indicators and keyboard accessibility for interactive controls."
      },
      {
        "type": "action",
        "description": "Test using screen reader with descriptive labels and ARIA roles."
      },
      {
        "type": "assertion",
        "description": "Confirm all important UI elements are announced properly."
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Performance and Caching Benchmark",
    "description": "Verify that performance optimizations including caching, query optimizations, and logging meet required benchmarks for responsiveness and reliability.",
    "category": "performance",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Conduct load tests on key API endpoints and observe response times."
      },
      {
        "type": "assertion",
        "description": "Verify API response times meet project performance targets."
      },
      {
        "type": "action",
        "description": "Perform repeat queries and verify caching reduces load times."
      },
      {
        "type": "assertion",
        "description": "Check logs for proper entries and cache hits."
      }
    ]
  },
  {
    "id": "TC012",
    "title": "Multi-tier Financial Record Operations Edge Cases",
    "description": "Verify system behavior when creating financial records with edge data such as extreme values, duplicate entries, and invalid categories.",
    "category": "error handling",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Attempt to add income/expense with zero and extremely large amounts."
      },
      {
        "type": "assertion",
        "description": "Verify system accepts or rejects amounts based on defined limits with proper validation messages."
      },
      {
        "type": "action",
        "description": "Attempt to add a financial record with a duplicate transaction ID or details."
      },
      {
        "type": "assertion",
        "description": "Check if duplicates are allowed or blocked appropriately."
      },
      {
        "type": "action",
        "description": "Attempt to categorize a record with an invalid or non-existent category."
      },
      {
        "type": "assertion",
        "description": "Confirm that the system rejects invalid categories with user feedback."
      }
    ]
  },
  {
    "id": "TC013",
    "title": "Task Management Drag-and-Drop and Filtering",
    "description": "Verify that tasks can be dragged and dropped to reorder or change status, and filters for tasks by status and categories function as expected.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Create multiple tasks with different statuses and categories."
      },
      {
        "type": "action",
        "description": "Use drag-and-drop interface to reorder tasks in a list and move tasks between statuses."
      },
      {
        "type": "assertion",
        "description": "Verify tasks reflect new order and statuses after drop."
      },
      {
        "type": "action",
        "description": "Apply filters by status and category."
      },
      {
        "type": "assertion",
        "description": "Verify only matching tasks are visible after filters applied."
      }
    ]
  },
  {
    "id": "TC014",
    "title": "Notification System History and Alert Management",
    "description": "Verify that notifications are properly generated, displayed in dropdown, and persisted in history with alert management options.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Trigger system events that generate notifications."
      },
      {
        "type": "assertion",
        "description": "Verify notifications appear promptly in notification dropdown menu."
      },
      {
        "type": "action",
        "description": "Open notifications history panel."
      },
      {
        "type": "assertion",
        "description": "Verify all past notifications are listed accurately."
      },
      {
        "type": "action",
        "description": "Mark notifications as read/unread and clear alert notifications."
      },
      {
        "type": "assertion",
        "description": "Confirm alert counts update appropriately and cleared notifications no longer appear."
      }
    ]
  }
]
